#Files #############################################

# create with open(): file input/output #####################
# create a text file called oops.txt
fout = open('oops.txt', 'wt')
print('Oops, I created a file.', file=fout)
fout.close()

# let's perform some tests on this new file ###########
# exists() : check for whether it exists
import os
os.path.exists('oops.txt')

# isfile() : check the type 
name = 'oops.txt'
os.path.isfile(name)

# isdir() : to determine the directory
# single dot (.) is shorthand for current directory
# two dots (..) is shorthand for the parent directory
os.path.isdir('.')

# copy() : creates a copy 
# you have to call it from another module, shutil
# example: copy the file oops.txt to the file ohno.txt
import shutil
shutil.copy('oops.txt', 'ohno.txt')

# rename()
import os
os.rename('oops.txt', 'ohno.txt')

# remove() : deletes a file 
os.remove('oops.txt')

# directories ######################################
# mkdir() : create a directory
os.mkdir('poems')
os.path.exists('poems')

# rmdir() : deletes a directory
os.rmdir('poems')

# listdir() : list contents
os.listdir('poems')

# make a subdirectory:
os.mkdir('poems/milton')
os.listdir('poems')

# create a file in this subdirectory:
fout = open('poems/milton/paradise_lost', 'wt')
fout.write('''Here is a bunch of text,
           from this fine book,
           it goes on and on,
           til it is through.
           ''')
fout.close()
# now when we get something when we run os.listdir('poems/milton')

# chdir() : to change directory
import os
os.chdir('poems')
os.listdir('milton')
os.listdir('.')   # so now when we check, we'll be in milton

# glob() : use to list matching files
# this uses Unix shell rules:
# * matches everything
# ? matches a single character
# [abc] matches character a, b , or c
# [!abc] matches any character except a, b, or c

# use case: get all files or directories that being with 'm'
import glob
glob.glob('m*')

# match any two-letter files
glob.glob('??')

# match any 8 letter word that beings with an 'm' and ends with an 'e'
glob.glob('m??????e') 

# anything that begins with k, l, or , and ends with e
glob.glob('[klm]*e')

#Calendars and Clocks #######################################
# datetime module: includes 4 main objects
    # date : for years, months, days
    # time : for hours, minutes, seconds
    # datetime : for dates and times together
    # timedelta : for date/time intervals

from datetime import date
halloween = date(2014, 10, 31)
halloween.day
halloween.month
halloween.year

# isoformat()
halloween.isoformat()  # to print it in the form '2014-10-31'

# today()
from datetime import date
now = date.today()

# timedelta()
from datetime import date
from datetime import timedelta
now = date.today()
one_day = timedelta(days=1)
tomorrow = now + one_day
# tomorrow returns the date of tomorrow
now + 17*one_day
# returns 17 days from today's date
yesterday = now - one_day

# now() : use this method to get the current date and time
from datetime import datetime
now = datetime.now()
now.month
now.day
now.hour
now.minute

# combine() : to merge a date object and a time object into a datetime object
from datetime import datetime, date, time
noon = time(12)
this_day = date.today()
noon_today = datetime.combine(this_day, noon)
noon_today

# you can pull the date and time from a datetime by using date() and time() methods
noon_today.date()
noon_today.time()

# time module ###################################
# this is kind of confusing since there's a datetime module with a time function
# the time module is for representing absolute time
import time
now = time.time()
now

time.ctime(now)  # convert into a string

# read and write dates and times ################################
import time
now = time.time()
time.ctime(now)


