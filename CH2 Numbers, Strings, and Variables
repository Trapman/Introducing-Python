# Main Types of Objects Covered here:
#booleans
#integers
#floats
#strings

# everything in Python is implemented as an object.
# the type of object determines if it's mutable or immutable

type()  
# if you want to know the type of anything (literal value, variable, etc.)

# Numbers: simple math operators incuding
+
-
*
/     # floating point division:  7 / 2 returns 3.5
//    # integer truncating division:  7 // 2 returms 3
%     # modulus (remainder):        7 % 3 returns 1
**    # exponential:                3**4 returns 81 

# combining operators
-=    # so a-= 3 is the same thing as saying a = a- 3
*=    # so a*=3 is the same thing as saying a = a * 3
a /=  # so a/=3 is the same thing as sayin a = a / 3

# ex: a = 10, a-=2, a becomes 8

# Type Conversions: 
int()   # changes other Python data types to an integer: int(99.5) returns 99
        # use on strings too: int('99') returns 99
 
float()  # changes to float, so float(99) returns 99.0

str()   #changes to a string, so str(99) returns '99'

#Escape Characters: use \
\n  #returns a new line
\t  #returns a new tab

# combine strings with +   : "Good evening" + "how are you, Trapman?" returns "Good evening how are you, Trapman?"

# Slicing: use []
[ start : end : step] format
[:] extracts everthing
[start :] specifies the start to the end
[: end]   specifies from the beginning to the end (up to but not including)
[start : end]
[start : end : step] specifies from the begining to the end, skipping characters by step

# len()

# split()
# use to break a string into a list of smaller strings
coffee = 'la colombe coffee,elixr coffee,joe coffee,ultimo coffee'
coffee.split(',')
# returns ['la colombe coffee', 'elixr coffee', 'joe coffee', 'ultimo coffee']
# if you don't specify split(), then the () just uses any type of white space characters (new lines, spaces, and tabs)
# coffee.split()
# returns ['la', 'colombe', 'coffee', 'elixr', 'coffee'...]

#join()
# basically the opposite of split
# it collapses a list of strings into a single string
# string.join(list)
crypto_list = ['btc', 'eth', 'tomo']
crypto_string = ','.join(crypto_list)
print('Best projects in blockchain right now:', crypto_string)

# some common string functions:
[]  # slicing
len()
startswith()    # crypto_list.startswith('btc'), returns True
endswith()
find()          # word = 'tomo', crypto_list.find(word), returns 2 (which is the position/offset of tomo in the list)
rfind()         # finds the position/offset of the last string 
count()         # returns the number of time a specific string appears
isalnum()       # checks to see if all characters are either letters or numbers; will return False if things like punctuation characters

# Case and Alignment
strip()
trap_intel = 'we're taking the Sixers, Lakers, Rockets, Jazz...'   # we want to remove the . from the string
trap_intel.strip('.')   # returns 'we're taking the Sixers, Lakers, Rockets, Jazz'

capitalize()  # capitalizes the first word
trap_intel.capitalize()   # returns 'We're taking...'
title()       #capitalizes all the words
trap_intel.title()   # returns 'We're Taking The Sixers...'
upper()   #converts all characters to uppers
lower()
swapcase()  # swaps upper- and lowercase
center()
ljustify()
rjustify()

#Subtitute with replace()
# use for simple string subsitution. Give it the old substring, the new one, and how many instances of the old it should replace
# if you don't specifIc the number of instances to be replaced, it'll replace all by default.
trap_intel.replace('tomo', 'tezos') #swaps out all instances of tomo with tezos
tran_intel.replace('tomo', 'tezos', 10) # swaps out 10 instances of tomo with tezos, leaves the rest

